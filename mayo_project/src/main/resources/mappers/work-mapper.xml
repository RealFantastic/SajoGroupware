<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Work">

<!-- WORK_NO         NOT NULL NUMBER          -->
<!-- PROJ_NO         NOT NULL NUMBER          -->
<!-- WORK_TITLE               VARCHAR2(50)    -->
<!-- WORK_CONTENT             VARCHAR2(3000)  -->
<!-- WORK_MGR                 VARCHAR2(30)    -->
<!-- WORK_START_DATE          DATE            -->
<!-- WORK_DEADLINE            DATE            -->
<!-- WORK_PROGRESS            NUMBER  10%단위 설정 가능 / 최대 100 / 100= 완료-->
<!-- ISEMERGENCY     NOT NULL VARCHAR2(3)     Y/N-->
<!-- WORK_STATUS              NUMBER   0:요청 1:진행, 2: 완료, 3: 보류       -->
<!-- WORK_DATE                TIMESTAMP(6)    -->

<!-- 첨부파일 -->
<!-- 	private int file_no; -->
<!-- 	private String proj_file_path; -->
<!-- 	private String proj_filename; -->
<!-- 	private String proj_original_filename; -->
<!-- 	private int work_no; -->

<resultMap type="Project" id="Project">
	<result column="PROJ_NAME" property="proj_name"/>
</resultMap>

<resultMap type="Employee" id="Employee">
	<result column="EMP_NAME" property="emp_name"/>
</resultMap>

<resultMap type="ProjFile" id="ProjFile">
	<result column="FILE_NO" property="file_no"/>
	<result column="PROJ_FILE_PATH" property="proj_file_path"/>
	<result column="PROJ_FILENAME" property="proj_filename"/>
	<result column="PROJ_ORIGINAL_FILENAME" property="proj_original_filename"/>
	<result column="WORK_NO" property="work_no"/>
</resultMap>

<resultMap type="Work" id="Work">
	<result column="WORK_NO" property="work_no"/>
	<result column="PROJ_NO" property="proj_no"/>
	<result column="WORK_TITLE" property="work_title"/>
	<result column="WORK_CONTENT" property="work_content"/>
	<result column="WORK_MGR" property="work_mgr"/>
	<result column="WORK_START_DATE" property="work_start_date"/>
	<result column="WORK_DEADLINE" property="work_deadline"/>
	<result column="WORK_PROGRESS" property="work_progress"/>
	<result column="ISEMERGENCY" property="isemergency"/>
	<result column="WORK_STATUS" property="work_status"/>
	<result column="WORK_DATE" property="work_date"/>
	<collection property="Project" resultMap="Project"/>
	<collection property="ProjFile" resultMap="ProjFile"/>
	<collection property="Employee" resultMap="Employee"/>
</resultMap>

<!-- 모든 프로젝트의 모든 업무 글 보기 -->
<select id="selectAllWork" resultType="Work"> 
	select * from work_board join proj using (proj_no) order by work_no desc
</select>

<!-- 특정 프로젝트의 모든 업무 글 보기 -->
<select id="selectWork" resultType="Work">
	select * from work_board where proj_no=#{proj_no} order by work_no desc
</select>

<!-- 특정 프로젝트의 특정 업무 글 보기 -->
<select id="viewWork" resultType="Work">
	select * from work_board w join employee e on w.work_mgr = e.emp_no where work_no=#{work_no}
</select>

<!-- 전체 업무 글 수 -->
<select id="selectTotalCnt" resultType="_int">
	select count(*) from work_board
</select>

<!-- 특정 프로젝트 전체 업무 글 수 -->
<select id="selectCnt" resultType="_int">
	select count(*) from work_board where proj_no=#{proj_no}
</select>

<!-- 새 업무 글 작성 -->
<insert id="insertWork" parameterType="Work"> 
    insert all
    into work_board values (max_work_no, #{proj_no}, #{work_title}, #{work_content}, #{work_mgr} , #{work_start_date}, #{work_deadline}, #{work_progress}, #{isemergency}, #{work_status}, default)
   <foreach collection="projfilelist" item="projfile" index="idx">
   into project_file values (max_file_no+#{idx}, #{projfile.proj_file_path}, #{projfile.proj_original_filename}, max_work_no)
   </foreach>
   select (select nvl(max(work_no),0)+1 from work_board ) as max_work_no, (select nvl(max(file_no),0)+1 from project_file) as max_file_no from dual
</insert>

<!-- 업무 상태 수정 -->
<update id="updateStatus" parameterType="Work">
	update work_board set work_status=#{work_status}, work_progress=#{work_progress} where work_no=#{work_no}
</update>

<!-- 업무 글 수정 -->
<update id="updateWork" parameterType="Work">
	update work_board set work_title=#{work_title}, work_content=#{work_content}, work_start_date=#{work_start_date}, work_deadline=#{work_deadline},
	work_progress=#{work_progress}, isemergency=#{isemergency}, work_status=#{work_status} where work_no=#{work_no}
</update>

<!-- 업무 글 삭제 -->
<delete id="deleteWork">
	delete from work_board where work_no=#{work_no}
</delete>

</mapper>
